{{- if .Values.enabled }}
{{/* Configuración del Clúster */}}
{{- $namespace := "vault" -}}
{{- $project := "default" -}}
{{- $destinationName := "in-cluster" -}}
{{- $sizeSSD := "2Gi" -}}
{{- $sizePVC := "2Gi" -}}
---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: vault
---
# Configuración de PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-data-vault-0
  namespace: vault
spec:
  storageClassName: local-path
  capacity:
    storage: {{ $sizeSSD }}
  accessModes:
    - ReadWriteMany
  local:
    fsType: ""
    path: /mnt/ssd/app-data/vault/0
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
            - raspberrypi
---
# Configuración de PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-vault-app-0
  namespace: vault
spec:
  volumeName: pv-data-vault-0
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ $sizePVC }}
  storageClassName: local-path
---
# # Configuración de la aplicación PostgreSQL en ArgoCD
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault-app
spec:
  project: {{ $project }}
  destination:
    name: {{ $destinationName }}
    namespace: {{ $namespace }}
  ignoreDifferences: 
  - group: "apps"
    kind: "Deployment"
    jsonPointers:
    - /spec/replicas
  source:
    repoURL: "https://helm.releases.hashicorp.com"
    chart: vault
    targetRevision: "0.29.1"
    helm:
      valuesObject:
        global:
          enabled: true
          tlsDisable: true
          namespace: vault
        ui:
          enabled: true
        server:
          dataStorage:
            storageClass: local-path
          ha:
            enabled: true
            replicas: 1
            raft:
              enabled: true
              setNodeId: true
              config: |
                    ui = true
                    cluster_name = "vault-integrated-storage"
                    # FSM db file has wider permissions than needed: needed=-rw-------
                    storage "raft" {
                      path  = "/vault/data/"
                    }

                    listener "tcp" {
                      address = "0.0.0.0:8200"
                      cluster_address = "0.0.0.0:8201"
                      tls_disable = "true"
                    }
                    service_registration "kubernetes" {}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# secret vault-token
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: vault
data:
  token: aHZzLnRKeUh0VVhyNHF3MEdPWXZsQkI4UkdJUg==
type: Opaque 
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-secret-store
spec:
  provider:
    vault:
      server: http://vault-app.vault.svc.cluster.local:8200
      path: secret
      version: v2
      auth:
        tokenSecretRef:
          name: vault-token
          namespace: vault
          key: token
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vault-ingress
  namespace: vault
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: vault.dmascotte.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vault-app
                port:
                  number: 8200
  tls:
    - hosts:
        - vault.dmascotte.com
      secretName: cert-manager-dmascotte-certificate
{{ end -}}
