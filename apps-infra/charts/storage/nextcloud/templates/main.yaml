{{- if .Values.enabled }}
{{/* Configuración del Clúster */}}
{{- $namespace := "nextcloud" -}}
{{- $project := "default" -}}
{{- $destinationName := "in-cluster" -}}
{{- $sizeSSD := "15Gi" -}}
{{- $sizePVC := "5Gi" -}}
---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $namespace }}
---
# Configuración de PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-data-nextcloud
  namespace: {{ $namespace }}
spec:
  storageClassName: local-path
  capacity:
    storage: {{ $sizeSSD }}
  accessModes:
    - ReadWriteMany
  local:
    fsType: ""
    path: /mnt/ssd/app-data/nextcloud
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
            - raspberrypi
---
# Configuración de PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-data-nextcloud
  namespace: {{ $namespace }}
spec:
  volumeName: pv-data-nextcloud
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ $sizePVC }}
  storageClassName: local-path
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: nextcloud-headers
  namespace: nextcloud
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
      X-Forwarded-For: "{remote_addr}"
    customResponseHeaders:
      Strict-Transport-Security: "max-age=15552000; includeSubDomains"
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "SAMEORIGIN"
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: "no-referrer-when-downgrade"
---
# # Configuración de la aplicación PostgreSQL en ArgoCD
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud-app
spec:
  project: {{ $project }}
  destination:
    name: {{ $destinationName }}
    namespace: {{ $namespace }}
  sources:
    - repoURL: 'https://nextcloud.github.io/helm/'
      chart: nextcloud
      targetRevision: "6.2.2"
      helm:
        valuesObject:
          livenessProbe:
            enabled: false
          readinessProbe:
            enabled: false

          ingress:
            enabled: true
            className: traefik
            annotations:
              nginx.ingress.kubernetes.io/affinity: cookie
              cert-manager.io/cluster-issuer: dmascotte-issuer
              traefik.ingress.kubernetes.io/router.tls: "true"
              # Use Traefik middlewares for security headers and HTTPS redirection
              traefik.ingress.kubernetes.io/router.middlewares: traefik-secure-headers@kubernetescrd,traefik-redirect-https@kubernetescrd,nextcloud-nextcloud-headers@kubernetescrd
            hosts:
              - host: nextcloud.dmascotte.com
                paths:
                - /
            tls:
              - hosts:
                  - nextcloud.dmascotte.com

          nextcloud:
            host: nextcloud.dmascotte.com
            username: nextcloud
            password: nextcloud
            # Force HTTPS
            forceSSL: true
            # Configure maintenance window
            maintenanceWindow: "01:00"
            # Define trusted proxies
            trustedProxies:
              - "10.0.0.0/8"
              - "172.16.0.0/12"
              - "192.168.0.0/16"
              - "127.0.0.1"
              - "traefik-traefik.traefik.svc.cluster.local"
            # Set default phone region
            defaultPhoneRegion: "CO"
            # Configure mail server
            mail:
              enabled: true
              fromAddress: nextcloud@dmascotte.com
              domain: dmascotte.com
              smtp:
                host: smtp.example.com
                secure: ssl
                port: 465
                authtype: LOGIN
                name: nextcloud-smtp-user
                password: smtp-password
            # Configure Redis for transactional locking
            configs:
              redis.config.php: |-
                <?php
                $CONFIG = array (
                  'memcache.locking' => '\\OC\\Memcache\\Redis',
                  'redis' => array(
                    'host' => 'redis-master.redis.svc.cluster.local',
                    'port' => 6379,
                  ),
                );
            # Add post-install hooks to run maintenance commands
            hooks:
              postStartCommand: |-
                echo "Running post-start commands...";
                php occ maintenance:repair --include-expensive;
                php occ db:add-missing-indices;
                php occ db:convert-type --all-apps mysql nextcloud nextcloud nextcloud-db.nextcloud.svc.cluster.local;
          startupProbe:
            enabled: true
            initialDelaySeconds: 120
          persistence:
            enabled: true
            existingClaim: pvc-data-nextcloud
            storageClass: local-path
          externalDatabase:
            enabled: true
            type: postgres
            host: postgresql-app.postgres.svc.cluster.local:5432
            password: nextcloud
            username: nextcloud
            database: nextcloud
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
{{ end -}}
