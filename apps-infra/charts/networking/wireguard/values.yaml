enabled: true

# Namespace for the WireGuard deployment
namespace: wireguard

# ArgoCD configuration
argocd:
  project: default
  destinationName: in-cluster
  repoURL: https://k8s-at-home.com/charts/
  targetRevision: 1.4.2

# Image configuration
image:
  repository: linuxserver/wireguard
  tag: latest
  pullPolicy: IfNotPresent

# Timezone configuration
timezone: UTC

# Controller configuration
controller:
  replicas: 1

# Environment variables
env:
  TZ: UTC
  PUID: "1000"
  PGID: "1000"
  SERVERURL: "auto"
  PEERDNS: "auto"
  INTERNAL_SUBNET: "10.13.13.0/24"
  ALLOWEDIPS: "0.0.0.0/0"
  PEERS: "3"  # Number of peer configurations to generate
  LOG_CONFS: "true"  # Show QR codes in logs

# Persistence configuration
persistence:
  size: 1Gi
  nodeAffinity: raspberrypi
  config:
    enabled: true
    mountPath: /config

# Ingress configuration
ingress:
  enabled: false
  class: traefik
  host: wireguard.dmascotte.com
  tls: true
  tlsSecretName: cert-manager-dmascotte-certificate

# Resource constraints
resources:
  requests:
    memory: 128Mi
    cpu: 100m
  limits:
    memory: 512Mi

# Network configuration - matches k8s-at-home chart format
service:
  main:
    enabled: true
    type: LoadBalancer
    loadBalancerIP: 192.168.1.2
    externalTrafficPolicy: Local
    annotations:
      metallb.universe.tf/address-pool: metallb-ip-pool
      metallb.universe.tf/allow-shared-ip: "metallb-ip-pool"
    ports:
      http:
        enabled: false
      vpn:
        enabled: true
        port: 51820
        protocol: UDP
        targetPort: 51820
        nodePort: 31820

# Security context
securityContext:
  privileged: true # Needed for network access
  capabilities:
    add:
      - NET_ADMIN
      - SYS_MODULE

# # WireGuard configuration
# configSecret:
#   enabled: true
#   config: |
#     [Interface]
#     Address = 10.13.13.1/24
#     ListenPort = 51820
#     PrivateKey = REPLACE_WITH_YOUR_PRIVATE_KEY
#     PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
#     PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

#     # Example peer configuration - add your clients here
#     #[Peer]
#     #PublicKey = CLIENT_PUBLIC_KEY
#     #AllowedIPs = 10.13.13.2/32 